




Automated Video Processing and Social Media Posting Workflow
Comprehensive Guide for Noah Cox
























Table of Contents
Workflow Overview
Google Sheet Set Up
Definitions
Detailed Workflow Steps
Step 1: Trigger on New YouTube Upload
Step 2: Add Video Details to Google Sheets
Step 3: Initiate Klap API Task
Step 4: Monitor Klap API Task Status
Step 5: Retrieve and Upload Generated Shorts
Step 6: Update Google Sheets with Shorts URLs
Step 7: Initiate Placid AI Merge Task
Step 8: Monitor Placid AI Merge Task Status
Step 9: Upload Merged Video to Google Drive
Step 10: Transcribe Merged Video Audio Using Whisper
Step 11: Generate Captions and Hashtags
Step 12: Update Google Sheets with Transcription, Captions, and Hashtags
Step 13: Schedule Posts Across Multiple Platforms
Step 14: Finalize and Monitor Posts
Standard Operating Procedure (SOP)





















1. Overview of the Enhanced Workflow
The goal is to fully automate your video processing workflow using Zapier, starting from detecting new YouTube uploads to scheduling the final merged video for posting across multiple social media platforms. The steps are:

Trigger: Detect new YouTube uploads.
Logging: Add video details to Google Sheets.
Processing: Initiate Klap API task to generate shorts.
Monitoring: Monitor Klap API task status until completion.
Retrieval and Uploading: Retrieve generated shorts and upload them to Google Drive.
Updating: Update Google Sheets with shorts URLs.
Merging: Initiate Placid AI merge task to combine shorts.
Monitoring: Monitor Placid AI merge task status until completion.
Uploading Merged Video: Upload the merged video to Google Drive.
Transcribing: Run the audio of the merged video through Whisper to obtain a transcription.
Generating Captions and Hashtags: Use the transcription to write captions and hashtags.
Updating: Update Google Sheets with the transcription, captions, and hashtags.
Scheduling Posts: Schedule the final video for posting across multiple social media platforms using the generated captions and hashtags.
Finalizing: Monitor posts and update posting statuses in Google Sheets.

2. Designing the Optimized Google Sheet


Setting Up the Google Sheets for Automated Matching
1. Create a 'Sludge Content' Tab in Google Sheets
This tab will contain all your sludge content videos along with their associated tags.

2. Add Tag Columns to Your Main Workflow Sheet
In your main workflow sheet where you track the clipped videos, add columns for tags that describe each clipped video.
Updated File Structure for Main Workflow Sheet
Add the following columns:


3. Populate Tags for Clipped Videos
Clip Tag Columns (X to AB): Enter tags that describe the content of each clipped video.
4. Use XLOOKUP or FILTER Functions to Match Videos
Option A: Using FILTER Function
The FILTER function can be used to find sludge content videos where the tags match those of the clipped video.
In Cell AC2 (Matched Sludge ID):
plaintext
Copy code
=INDEX(FILTER('Sludge Content'!A2:A, COUNTIF(X2:AB2, 'Sludge Content'!C2:G2)), 1)

In Cell AD2 (Sludge Content URL):
plaintext
Copy code
=IF(NOT(ISBLANK(AC2)), VLOOKUP(AC2, 'Sludge Content'!A:B, 2, FALSE), "")

Explanation:
FILTER('Sludge Content'!A2:A, COUNTIF(X2:AB2, 'Sludge Content'!C2:G2)) filters the sludge content IDs where the tags match.
COUNTIF counts the number of times the tags in the clipped video appear in the sludge content tags.
INDEX(..., 1) retrieves the first matching sludge content ID.
VLOOKUP fetches the corresponding sludge content URL based on the matched Sludge ID.

3. Tool Descriptions
Zapier:
An online automation tool that connects your apps and services.
Allows you to automate tasks without any coding.
Klap AI:
An AI-powered tool that creates short video clips from longer videos.
Ideal for generating content suitable for platforms favoring brief videos.
Placid AI:
A service that automates the creation of visual content, including merging videos.
Helps in combining multiple clips into a single, cohesive video.
OpenAI's Whisper:
An advanced AI model for transcribing speech to text.
Provides accurate transcriptions that can be used for caption creation.
CloudConvert:
An online file conversion tool.
Used to convert video files into audio files for transcription.







4. Step-by-Step Automated Workflow
Prerequisites
Accounts and Access:
Zapier (with necessary app integrations).
YouTube account (with access to the desired channel).
Google Sheets and Google Drive.
Klap API access (API key).
Placid AI access (API key).
OpenAI API access (for Whisper and text generation).
Social media accounts or scheduling tool (e.g., Buffer, Hootsuite).
Zapier Features Needed:
Webhooks.
Paths or Filters.
Delay.
Looping (if available).
Code by Zapier (if needed).


Step 1: Trigger on New YouTube Upload
Objective: Automatically detect new video uploads on your YouTube channel.
App: YouTube
Trigger Event: New Video in Channel
Set Up:
Channel ID: Provide your YouTube channel ID.
Test Trigger: Ensure Zapier detects the most recent video.

Step 2: Add Video Details to Google Sheets
Objective: Log the new video's details in Google Sheets.
App: Google Sheets
Action Event: Create Spreadsheet Row
Set Up:
Spreadsheet: Select your workflow sheet.
Worksheet: Choose the correct tab.
Map Fields:
Video ID: From YouTube trigger.
Video URL: From YouTube trigger.
Status: Set to "New".
Test Action: Verify that a new row is added with the correct data.

Step 3: Initiate Klap API Task
Objective: Start processing the video with Klap API to generate shorts.
App: Webhooks by Zapier
Action Event: POST
Set Up:
Method: POST
URL: https://api.klap.ai/tasks/video-to-shorts
Headers:
Content-Type: application/json
Authorization: Bearer YOUR_KLAP_API_KEY
Data:
json
Copy code
{
  "source_video_url": "{{Video URL}}",
  "name": "{{Video ID}}",
  "target_clip_count": 10,
  "max_clip_count": 10,
  "editing_options": {
    "captions": true,
    "reframe": true
  },
  "dimensions": {
    "width": 1080,
    "height": 1920
  }
}


Test Action: Ensure the API call is successful and returns a task_id.
Update Google Sheets:
App: Google Sheets
Action Event: Update Spreadsheet Row
Set Up:
Row: Use the Row ID from Step 2.
Klap Task ID: Map from the API response.
Klap Task Status: Set to "Pending".

Step 4: Monitor Klap API Task Status
Objective: Automatically check the status of the Klap API task until it's completed.
Method:
Use a Looping mechanism or a scheduled Zap to periodically check the task status.
Within the Loop or Scheduled Zap:
Delay Step:
App: Delay by Zapier
Action Event: Delay For
Set Up: Delay for 5 minutes.
Check Task Status:
App: Webhooks by Zapier
Action Event: GET
URL: https://api.klap.ai/tasks/{{Klap Task ID}}
Headers:
Authorization: Bearer YOUR_KLAP_API_KEY
Parse Response: Extract the status field.
Update Google Sheets:
Klap Task Status: Update with the new status.
Conditional Logic:
If status is "completed" or "failed", proceed to the next step.
Else, continue looping.

Step 5: Retrieve and Upload Generated Shorts
Objective: Once Klap API task is completed, retrieve the shorts and upload them to Google Drive.
Retrieve Shorts:
App: Webhooks by Zapier
Action Event: GET
URL: https://api.klap.ai/projects/{{Project ID}}
Headers:
Authorization: Bearer YOUR_KLAP_API_KEY
Parse Response: Extract the list of short video URLs.
Loop Through Shorts:
App: Looping by Zapier
Set Up: Iterate over each short URL.
Within the Loop:
Download Short Video:
App: Webhooks by Zapier
Action Event: GET
URL: Short URL from the loop.
File: Capture the file content.
Upload to Google Drive:
App: Google Drive
Action Event: Upload File
Set Up:
Folder: Designated folder for shorts.
File: Use file content from the previous step.
File Name: {{Video ID}}_short_{{Loop Index}}.mp4
Collect Drive URLs:
Store each uploaded file's URL in a list.

Step 6: Update Google Sheets with Shorts URLs
Objective: Record the URLs of the uploaded shorts in Google Sheets.
After Loop Completion:
Update Google Sheets:
Short URLs: List from Klap API.
Drive Shorts URLs: List from Google Drive uploads.
Status: Update to "Shorts Uploaded".

Step 7: Initiate Placid AI Merge Task
Objective: Merge each clipped video with a corresponding sludge content video using Placid AI. Each clipped video is matched with a specific sludge content video from a designated folder.
Context: The merging process involves combining two video sources:
Clipped Video: Generated from the previous steps using Klap AI.
Sludge Content Video: A separate video from a folder containing various sludge content videos. Each clipped video is paired with a unique sludge content video based on predefined matching criteria (e.g., file names, IDs, or a mapping in Google Sheets).
App: Webhooks by Zapier
Action Event: POST
URL: https://api.placid.app/v1/merge
Headers:
Content-Type: application/json
Authorization: Bearer YOUR_PLACID_AI_API_KEY
Data:
json
Copy code
{
  "videos": ["{{Sludge Content Video URL}}", "{{Clipped Video URL}}"],
  "output_format": "mp4"
}

Set Up:
Retrieve Sludge Content Video URL:
Access the Sludge Content Folder:
Use Google Drive or another storage solution where sludge content videos are stored.
Ensure Zapier has access permissions to this folder.
Match Clipped Video with Sludge Content Video:
Establish a matching system (e.g., a mapping table in Google Sheets) that pairs each clipped video with a specific sludge content video.
This mapping can be based on video IDs, names, or any other consistent identifier.
For example, if the clipped video is video_123.mp4, it might be matched with sludge_123.mp4.
Obtain the URL:
Add a Step to Retrieve Matched Sludge Content:
App: Google Sheets
Action Event: Lookup Spreadsheet Row
Set Up:
Spreadsheet: Your main workflow sheet.
Worksheet: 'Sludge Content' tab.
Lookup Key: Use the matched Sludge ID from Column AC.
Return Field: Sludge Content URL from Column B.
Use the Retrieved URL in Your Placid AI Merge Step:
Replace {{Sludge Content Video URL}} with the URL retrieved from the previous step
Prepare Clipped Video URL:
Use the URL of the clipped video obtained from previous steps (uploaded to Google Drive or another storage solution).
Configure Data Payload:
Replace {{Sludge Content Video URL}} with the URL obtained in step 1.
Replace {{Clipped Video URL}} with the URL from step 2.
Make the API Call:
App: Webhooks by Zapier
Action Event: POST
URL: https://api.placid.app/v1/merge
Headers:
Content-Type: application/json
Authorization: Bearer YOUR_PLACID_AI_API_KEY
Data:
json
Copy code
{
  "videos": ["{{Sludge Content Video URL}}", "{{Clipped Video URL}}"],
  "output_format": "mp4"
}


Note: The order of the videos in the array determines how they are merged. Confirm with Placid AI documentation if the sequence affects the final output
Update Google Sheets:
Placid Task ID: From the API response.
Placid Task Status: Set to "Pending".

Step 8: Monitor Placid AI Merge Task Status
Objective: Check the status of the Placid AI task until it's completed.
Method:
Use a Looping mechanism or a scheduled Zap to periodically check the task status.
Within the Loop or Scheduled Zap:
Delay Step:
App: Delay by Zapier
Action Event: Delay For
Set Up: Delay for 5 minutes.
Check Task Status:
App: Webhooks by Zapier
Action Event: GET
URL: https://api.placid.app/v1/tasks/{{Placid Task ID}}
Headers:
Authorization: Bearer YOUR_PLACID_AI_API_KEY
Parse Response: Extract the status and output_url.
Update Google Sheets:
Placid Task Status: Update with the new status.
Merged Video URL: If available.
Conditional Logic:
If status is "completed" or "failed", proceed to the next step.
Else, continue looping.

Step 9: Upload Merged Video to Google Drive
Objective: Store the final merged video in Google Drive.
Download Merged Video:
App: Webhooks by Zapier
Action Event: GET
URL: {{Merged Video URL}}
File: Capture the file content.
Upload to Google Drive:
App: Google Drive
Action Event: Upload File
Set Up:
Folder: Designated folder for merged videos.
File: Use file content from the previous step.
File Name: {{Video ID}}_merged.mp4.
Update Google Sheets:
Drive Merged Video URL: From the upload action.
Status: Update to "Merged Video Uploaded".

Step 10: Transcribe Merged Video Audio Using Whisper
Objective: Run the audio of the merged video through Whisper to obtain a transcription.
Extract Audio from Merged Video:
App: CloudConvert (or similar)
Action Event: Convert File
Set Up:
Input File URL: {{Drive Merged Video URL}}
Conversion Type: MP4 to MP3
Transcribe Audio with Whisper:
App: OpenAI
Action Event: Transcribe Audio
Set Up:
Audio File: Use the MP3 file from previous step.
Model: whisper-1 (or latest)
Language: Specify if needed (e.g., "en" for English)
Update Google Sheets:
Transcription: Record the transcription text in column M.

Step 11: Generate Captions and Hashtags
Objective: Use the transcription to generate engaging captions and relevant hashtags.
Generate Caption:
App: OpenAI
Action Event: Create Completion
Set Up:
Prompt:
css
Copy code
Based on the following transcription, write an engaging and concise social media caption that summarizes the main points and encourages viewers to watch the video:

"{{Transcription}}"


Temperature: 0.7
Max Tokens: 150
Generate Hashtags:
App: OpenAI
Action Event: Create Completion
Set Up:
Prompt:
css
Copy code
From the following transcription, extract 5 relevant and trending hashtags for social media platforms. The hashtags should be popular and related to the content:

"{{Transcription}}"


Temperature: 0.5
Max Tokens: 50

Step 12: Update Google Sheets with Transcription, Captions, and Hashtags
Objective: Record the generated caption and hashtags in Google Sheets.
App: Google Sheets
Action Event: Update Spreadsheet Row
Set Up:
Row: Use the same Row ID.
Caption (Column N): Map the generated caption.
Hashtags (Column O): Map the generated hashtags.

Step 13: Schedule Posts Across Multiple Platforms
Objective: Automatically schedule the merged video for posting on multiple social media platforms using the generated captions and hashtags.
Platforms: Instagram, TikTok, Facebook, Twitter, LinkedIn, Pinterest, etc.
Loop Through Platforms:
App: Looping by Zapier
Set Up: Create an array of platform names to loop through.
Within the Loop:
Conditional Paths: Use paths to handle platform-specific posting requirements.
Post to Each Platform:
Instagram:
App: Instagram for Business
Action Event: Publish Video
Set Up:
Account: Connect your Instagram Business account.
Video URL: {{Drive Merged Video URL}}
Caption: Combine {{Caption}} and {{Hashtags}}
Update Google Sheets:
Instagram Status (Column Q): Set to "Scheduled" or "Posted".
TikTok:
App: TikTok (via integration)
Action Event: Upload Video
Set Up:
Video File: From Google Drive.
Caption: Use within character limits.
Update Google Sheets:
TikTok Status (Column R): Set to "Scheduled" or "Posted".
Facebook:
App: Facebook Pages
Action Event: Create Video Post
Set Up:
Page: Select your Facebook page.
Video URL: From Google Drive.
Description: Use the caption and hashtags.
Update Google Sheets:
Facebook Status (Column S): Set to "Scheduled" or "Posted".
Twitter:
App: Twitter
Action Event: Create Tweet
Set Up:
Tweet Text: Combine caption and hashtags, within character limits.
Media URL: From Google Drive.
Update Google Sheets:
Twitter Status (Column T): Set to "Scheduled" or "Posted".
LinkedIn:
App: LinkedIn
Action Event: Share Update
Set Up:
Content: Use caption and hashtags.
Media URL: From Google Drive.
Update Google Sheets:
LinkedIn Status (Column U): Set to "Scheduled" or "Posted".
Pinterest:
App: Pinterest
Action Event: Create Pin
Set Up:
Board: Choose your board.
Image URL: Use a thumbnail if video not supported.
Note: Use the caption.
Link: Link back to the YouTube video or website.
Update Google Sheets:
Pinterest Status (Column V): Set to "Scheduled" or "Posted".
Overall Posting Status:
Update Google Sheets:
Posting Status (Column P): Set to "Scheduled" or "Posted" if all platforms are updated.

Step 14: Finalize and Monitor Posts
Objective: Ensure all posts are successfully scheduled or published, and handle any exceptions.
Error Handling:
Capture any errors during posting actions.
Log errors in the "Notes" column (Column W) in Google Sheets.
Notifications:
App: Email or Slack
Action Event: Send Email or Send Message
Set Up:
To: Your email or team Slack channel.
Subject/Message: Include details of any failures or successes.
Engagement:
Monitor the posts on each platform.
Respond to comments and engage with the audience as needed.
5. Standard Operating Procedure (SOP)
Title: Automated Video Processing, Transcription, and Multi-Platform Social Media Posting Workflow
Objective
To automate the end-to-end process of video content creation, transcription, and distribution across multiple social media platforms, including caption and hashtag generation based on the video's transcription, using Zapier.
Scope
This SOP covers:
Detecting new YouTube video uploads.
Processing videos to create shorts using Klap AI.
Merging shorts into a final video using Placid AI.
Transcribing the merged video's audio using Whisper (OpenAI).
Generating captions and hashtags from the transcription.
Scheduling posts across various social media platforms.
Recording all activities in Google Sheets for tracking.
Responsibilities
Content Creator: Uploads videos to YouTube.
Automation Manager: Sets up and maintains the Zapier workflows.
Social Media Manager: Monitors posts and engages with the audience.
Prerequisites
Active accounts and API access for:
Zapier
YouTube
Google Sheets and Google Drive
Klap AI API
Placid AI API
OpenAI API (for Whisper and text generation)
Social media platforms or scheduling tool
Configured Google Sheet with the necessary columns.
Necessary permissions and access rights for all tools and platforms.
Procedures
Step 1: Detect New YouTube Upload
Trigger: New video uploaded to the YouTube channel.
Action:
Zapier detects the new video.
Data extracted: Video ID, Video URL.
Step 2: Log Video Details in Google Sheets
Action:
Create a new row in the designated Google Sheet.
Populate columns: Video ID, Video URL, Status ("New").
Step 3: Initiate Klap API Task
Action:
Send a POST request to Klap API to process the video.
Update Google Sheets with Klap Task ID and set Klap Task Status to "Pending".
Step 4: Monitor Klap API Task
Action:
Periodically check Klap Task Status using a GET request.
Update status in Google Sheets until the task is "completed" or "failed".
Step 5: Retrieve and Upload Shorts
Action:
Once Klap Task is completed, retrieve shorts URLs.
Download each short and upload to Google Drive.
Record Drive Shorts URLs in Google Sheets.
Update Status to "Shorts Uploaded".
Step 6: Initiate Placid AI Merge Task
Action:
Send a POST request to Placid AI to merge shorts.
Include Drive Shorts URLs in the request.
Update Google Sheets with Placid Task ID and set Placid Task Status to "Pending".
Step 7: Monitor Placid AI Task
Action:
Periodically check Placid Task Status using a GET request.
Update status and Merged Video URL in Google Sheets.
Continue until the task is "completed" or "failed".
Step 8: Upload Merged Video to Google Drive
Action:
Download merged video from Placid AI.
Upload the video to Google Drive.
Update Drive Merged Video URL in Google Sheets.
Update Status to "Merged Video Uploaded".
Step 9: Transcribe Merged Video Audio Using Whisper
Action:
Extract audio from the merged video using CloudConvert.
Use OpenAI's Whisper API to transcribe the audio file.
Record the transcription in the "Transcription" column in Google Sheets.
Step 10: Generate Captions and Hashtags
Action:
Use OpenAI to generate an engaging caption based on the transcription.
Use OpenAI to generate relevant hashtags.
Update the "Caption" and "Hashtags" columns in Google Sheets.
Step 11: Schedule Posts Across Platforms
Action:
Loop through the list of social media platforms.
For each platform:
Use the appropriate Zapier app or integration.
Schedule or publish the post using the merged video, caption, and hashtags.
Update the platform-specific status column in Google Sheets.
Step 12: Finalize and Monitor Posts
Action:
Monitor posting statuses in Google Sheets.
Engage with the audience by responding to comments and messages.
Address any errors noted in the "Notes" column.


